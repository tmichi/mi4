if (glfw3_FOUND AND GLEW_FOUND)
	ADD_EXECUTABLE(fbo0 fbo0.cpp)
	TARGET_LINK_LIBRARIES(fbo0 glfw GLEW::GLEW ${OPENGL_LIBRARIES})
else ()
	message("fbo0 skipped.")
endif()

ADD_EXECUTABLE(command0 command0.cpp)
ADD_EXECUTABLE(command1 command1.cpp)
ADD_EXECUTABLE(mesh0 mesh0.cpp)
ADD_EXECUTABLE(svg0 svg0.cpp)
ADD_EXECUTABLE(xml0 xml0.cpp)
ADD_EXECUTABLE(system0 system0.cpp)
ADD_EXECUTABLE(system1 system1.cpp)
ADD_EXECUTABLE(octree0 octree0.cpp)
ADD_EXECUTABLE(kdtree0 kdtree0.cpp)
ADD_EXECUTABLE(normalize0 normalize0.cpp)
ADD_EXECUTABLE(normalize1 normalize1.cpp)
ADD_EXECUTABLE(timer0 timer0.cpp)
ADD_EXECUTABLE(color0 color0.cpp)
ADD_EXECUTABLE(color1 color1.cpp)
ADD_EXECUTABLE(routine0 routine0.cpp)
ADD_EXECUTABLE(pq0 pq0.cpp )
ADD_EXECUTABLE(volume0 volume0.cpp )
ADD_EXECUTABLE(volume1 volume1.cpp)
ADD_EXECUTABLE(ccl0 ccl0.cpp)
ADD_EXECUTABLE(ccl1 ccl1.cpp)
ADD_EXECUTABLE(cast0 cast0.cpp)
ADD_EXECUTABLE(volcreator0 volcreator0.cpp)
ADD_EXECUTABLE(tokenizer0 tokenizer0.cpp)
ADD_EXECUTABLE(parallel0 parallel0.cpp)
ADD_EXECUTABLE(volut0 volut0.cpp)

TARGET_LINK_LIBRARIES(ccl0 Eigen3::Eigen)
TARGET_LINK_LIBRARIES(ccl1 Eigen3::Eigen)
TARGET_LINK_LIBRARIES(kdtree0 Eigen3::Eigen)
TARGET_LINK_LIBRARIES(volume0 Eigen3::Eigen)
TARGET_LINK_LIBRARIES(volume1 Eigen3::Eigen)
TARGET_LINK_LIBRARIES(mesh0 Eigen3::Eigen)
TARGET_LINK_LIBRARIES(volcreator0 Eigen3::Eigen)
TARGET_LINK_LIBRARIES(normalize0 Eigen3::Eigen)
TARGET_LINK_LIBRARIES(normalize1 Eigen3::Eigen)
TARGET_LINK_LIBRARIES(cast0 Eigen3::Eigen)
TARGET_LINK_LIBRARIES(volut0 Threads::Threads Eigen3::Eigen)
TARGET_LINK_LIBRARIES(parallel0 Threads::Threads)


